<?php

namespace App\Http\Controllers{{ api }};

use App\Http\Controllers\Controller;
use App\Http\Controllers\{{ type }}Controller;
use App\Repositories\Interface\{{ name }}Interface;

class {{ name }}Controller extends {{ type }}Controller
{
    protected {{ name }}Interface $model;

    /**
     * {{ name }}Controller constructor
     *
     * @param {{ name }}Interface $model
     *
     * @author malayvuong
     * @since 7.0.0 - 2022-09-20, 23:52 ICT
     */
    public function __construct({{ name }}Interface $model)
    {
        parent::__construct();

        $this->model = $model;
    }

    /**
     * Get list {{ name }}
     *
     * @return \Illuminate\Http\JsonResponse
     * @author malayvuong
     * @since 7.0.0 - 2022-09-20, 23:52 ICT
     */
    public function index()
    {
        if (! auth()->user()->tokenCan('{{ name_lower }}.viewAny')) {
            return response()->json([], 403);
        }

        return response()->json([]);
    }

    /**
     * Create new {{ name }}
     *
     * @param Store{{ name }}Request $request
     * @param AppResponse $res
     *
     * @return AppResponse
     * @author malayvuong
     * @since 7.0.0 - 2022-10-26, 23:46 ICT
     */
    public function store(Store{{ name }}Request $request, AppResponse $res): AppResponse
    {
//        if (! user()->can('create', $this->model->getModel())) {
//            return $res->failed()->message('You do not have permission to create this resource.')->code(Response::HTTP_FORBIDDEN);
//        }

        DB::beginTransaction();

        try {
            $model->save();
        } catch (ErrorException $e) {
            DB::rollBack();
            return $res->failed()->message($e->getMessage())->code(Response::HTTP_INTERNAL_SERVER_ERROR);
        }

        DB::commit();

        return $res->data($model)->code(Response::HTTP_CREATED)->message('Create successfully.');
    }

    /**
     * Get item to edit
     *
     * @param int $id
     * @param AppResponse $res
     *
     * @return AppResponse
     * @author malayvuong
     * @since 7.0.0 - 2022-11-05, 23:53 ICT
     */
    public function edit(int $id, AppResponse $res): AppResponse
    {
//        if (! user()->can('update', $this->model->getModel())) {
//            return $res->failed()->message('You do not have permission to update this resource.')->code(Response::HTTP_FORBIDDEN);
//        }

        $model = $this->model->find($id);

        if (empty($model)) {
            return $res->error()->message('Item not found.');
        }

        return $res->data($model);
    }

    /**
     * Process to update item
     *
     * @param int $id
     * @param UpdateEnumerateTypeRequest $request
     * @param AppResponse $res
     *
     * @return AppResponse
     * @author malayvuong
     * @since 7.0.0 - 2022-11-06, 00:07 ICT
     */
    public function update(int $id, UpdateEnumerateTypeRequest $request, AppResponse $res): AppResponse
    {
//        if (! user()->can('update', $this->model->getModel())) {
//            return $res->failed()->message('You do not have permission to update this resource.')->code(Response::HTTP_FORBIDDEN);
//        }

        $model = $this->model->find($id);

        if (empty($model)) {
            return $res->error()->message('Item not found.');
        }

        $model = $model->fill($request->validated());

        DB::beginTransaction();
        try {
            $model->save();
        } catch (ErrorException $e) {
            DB::rollBack();
            return $res->failed()->message($e->getMessage())->code(Response::HTTP_INTERNAL_SERVER_ERROR);
        }

        DB::commit();

        return $res->message('Update item successfully.')->code(Response::HTTP_ACCEPTED);
    }
}
